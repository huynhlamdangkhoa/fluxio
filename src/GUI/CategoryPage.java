package GUI;

import DAO.CategoryDAO;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;
import model.Category;
import util.DBConnection;


public class CategoryPage extends javax.swing.JFrame {
    private int categoryId = 0;

    /**
     * Creates new form ManageCategory
     */
    public CategoryPage() {
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        
    }
    
    private boolean validateFields() {
        if(txtCategoryName.getText().equals("")) {
            return false;
        }
        else {
            return true;
        }        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        categoryTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtCategoryName = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        btnSave1 = new javax.swing.JButton();
        txtCategorydelete = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        delete = new javax.swing.JButton();
        back = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();

        jLabel3.setText("jLabel3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Fluxio");
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Manage Category");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(278, 6, -1, -1));

        categoryTable.setBackground(new java.awt.Color(255, 255, 255));
        categoryTable.setForeground(new java.awt.Color(0, 0, 0));
        categoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Category Name"
            }
        ));
        categoryTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                categoryTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(categoryTable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 440, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Category Name");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 120, 100, -1));

        txtCategoryName.setBackground(new java.awt.Color(255, 255, 255));
        txtCategoryName.setForeground(new java.awt.Color(0, 0, 0));
        getContentPane().add(txtCategoryName, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 140, 342, 30));

        btnUpdate.setBackground(new java.awt.Color(0, 0, 102));
        btnUpdate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 220, 340, -1));

        btnReset.setBackground(new java.awt.Color(0, 0, 102));
        btnReset.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnReset.setForeground(new java.awt.Color(255, 255, 255));
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });
        getContentPane().add(btnReset, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 250, 340, -1));

        btnClose.setBackground(new java.awt.Color(0, 0, 102));
        btnClose.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnClose.setForeground(new java.awt.Color(255, 255, 255));
        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        getContentPane().add(btnClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 280, 340, -1));

        jPanel1.setBackground(new java.awt.Color(255, 102, 0));
        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 850, 60));

        btnSave1.setBackground(new java.awt.Color(0, 0, 102));
        btnSave1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnSave1.setForeground(new java.awt.Color(255, 255, 255));
        btnSave1.setText("Save");
        btnSave1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSave1ActionPerformed(evt);
            }
        });
        getContentPane().add(btnSave1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 190, 340, -1));

        txtCategorydelete.setBackground(new java.awt.Color(255, 255, 255));
        txtCategorydelete.setForeground(new java.awt.Color(0, 0, 0));
        getContentPane().add(txtCategorydelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 410, 342, 30));

        jLabel4.setBackground(new java.awt.Color(0, 0, 0));
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Delete Category by ID");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 390, -1, -1));

        delete.setBackground(new java.awt.Color(0, 0, 102));
        delete.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        delete.setForeground(new java.awt.Color(255, 255, 255));
        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        getContentPane().add(delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 460, 340, -1));

        back.setBackground(new java.awt.Color(255, 102, 0));
        back.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        back.setForeground(new java.awt.Color(255, 255, 255));
        back.setText("Back to Home");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        getContentPane().add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 560, 120, -1));

        jPanel2.setBackground(java.awt.SystemColor.controlHighlight);
        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 850, 540));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) categoryTable.getModel();
        try {
            Connection con = DBConnection.getConnection();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM Category");
            while(rs.next()) {
                model.addRow(new Object[]{rs.getString("category_id"), rs.getString("category_name")});
            }
        }
        catch(Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        
        btnUpdate.setEnabled(false);
    }//GEN-LAST:event_formComponentShown

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        new CategoryPage().setVisible(true);
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        // TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_btnCloseActionPerformed

    private void categoryTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_categoryTableMouseClicked
        // TODO add your handling code here:
        int index = categoryTable.getSelectedRow();
        TableModel model = categoryTable.getModel();        
        String id = model.getValueAt(index, 0).toString();
        categoryId = Integer.parseInt(id);
        
        String name = model.getValueAt(index, 1).toString();
        txtCategoryName.setText(name);
        back.setEnabled(false);
        btnUpdate.setEnabled(true);
    }//GEN-LAST:event_categoryTableMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        String categoryName = txtCategoryName.getText();
        if (!validateFields()) {
            JOptionPane.showMessageDialog(null, "All fields are required");
            return;
        }

        Category category = new Category(categoryId, categoryName); // Using the selected category ID
        CategoryDAO categoryDAO = CategoryDAO.getInstance();
        int result = categoryDAO.update(category);

        if (result > 0) {
            JOptionPane.showMessageDialog(null, "Category updated successfully");
        } else {
            JOptionPane.showMessageDialog(null, "Error updating category");
        }
        refreshCategoryTable();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnSave1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSave1ActionPerformed
         String categoryName = txtCategoryName.getText();
        if (!validateFields()) {
            JOptionPane.showMessageDialog(null, "All fields are required");
            return;
        }

        Category category = new Category(0, categoryName);  // 0 indicates a new category without ID
        CategoryDAO categoryDAO = CategoryDAO.getInstance();
        int result = categoryDAO.insert(category);

        if (result > 0) {
            JOptionPane.showMessageDialog(null, "Category added successfully");
        } else {
            JOptionPane.showMessageDialog(null, "Error adding category");
        }
        refreshCategoryTable();
    }//GEN-LAST:event_btnSave1ActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        String categoryIdStr = txtCategorydelete.getText().trim();
        if (categoryIdStr.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter a category ID");
            return;
        }

        try {
            int categoryId = Integer.parseInt(categoryIdStr);
            Category category = new Category(categoryId, null);  // Category name is null for deletion
            CategoryDAO categoryDAO = CategoryDAO.getInstance();
            int result = categoryDAO.delete(category);

            if (result > 0) {
                JOptionPane.showMessageDialog(null, "Category deleted successfully");
            } else {
                JOptionPane.showMessageDialog(null, "Error deleting category");
            }
            refreshCategoryTable();  // To update the table after deletion
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Invalid category ID");
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        PageGraph pageGraph = PageGraph.getInstance();
        List<String> adjacentPages = pageGraph.getAdjacentPages("CategoryPage");

        System.out.println("Adjacent pages for CategoryPage: " + adjacentPages);

        boolean homePageFound = false;
        for (String nextPage : adjacentPages) {
            System.out.println("Checking page: " + nextPage);  

            if (nextPage.equals("HomePage")) { 
                homePageFound = true;
                System.out.println("homePageFound found! Navigating back to home...");  
                HomePage homePage = new HomePage();
                homePage.setVisible(true);
                this.setVisible(false);  
                break;  //
            }
        }

        if (!homePageFound) {
            System.out.println("HomePage not found in adjacent pages.");  // Debug if UserPage was not found
        }
    }//GEN-LAST:event_backActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CategoryPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CategoryPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CategoryPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CategoryPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CategoryPage().setVisible(true);
            }
        });
    }

    private void refreshCategoryTable() {
        DefaultTableModel model = (DefaultTableModel) categoryTable.getModel();
        model.setRowCount(0);  // Clear the table
        try {
            List<Category> categories = CategoryDAO.getInstance().selectAll();
            for (Category category : categories) {
                model.addRow(new Object[]{category.getCategoryId(), category.getCategoryName()});
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSave1;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JTable categoryTable;
    private javax.swing.JButton delete;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtCategoryName;
    private javax.swing.JTextField txtCategorydelete;
    // End of variables declaration//GEN-END:variables
}
